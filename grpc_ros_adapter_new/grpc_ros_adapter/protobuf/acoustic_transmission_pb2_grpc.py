# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import acoustic_transmission_pb2 as acoustic__transmission__pb2
import std_pb2 as std__pb2


class AcousticTransmissionStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StreamAcousticRequests = channel.unary_stream(
        '/acoustictransmission.AcousticTransmission/StreamAcousticRequests',
        request_serializer=acoustic__transmission__pb2.CommandRequest.SerializeToString,
        response_deserializer=acoustic__transmission__pb2.AcousticRequest.FromString,
        )
    self.ReturnAcousticPayload = channel.unary_unary(
        '/acoustictransmission.AcousticTransmission/ReturnAcousticPayload',
        request_serializer=acoustic__transmission__pb2.AcousticResponse.SerializeToString,
        response_deserializer=std__pb2.Empty.FromString,
        )


class AcousticTransmissionServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StreamAcousticRequests(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReturnAcousticPayload(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AcousticTransmissionServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StreamAcousticRequests': grpc.unary_stream_rpc_method_handler(
          servicer.StreamAcousticRequests,
          request_deserializer=acoustic__transmission__pb2.CommandRequest.FromString,
          response_serializer=acoustic__transmission__pb2.AcousticRequest.SerializeToString,
      ),
      'ReturnAcousticPayload': grpc.unary_unary_rpc_method_handler(
          servicer.ReturnAcousticPayload,
          request_deserializer=acoustic__transmission__pb2.AcousticResponse.FromString,
          response_serializer=std__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'acoustictransmission.AcousticTransmission', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
