# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import commander_service_pb2 as commander__service__pb2
import labust_pb2 as labust__pb2


class CommanderStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PrimitivePointer = channel.unary_unary(
        '/service.Commander/PrimitivePointer',
        request_serializer=labust__pb2.PointerPrimitiveService.SerializeToString,
        response_deserializer=commander__service__pb2.PrimitivePointerResponse.FromString,
        )


class CommanderServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def PrimitivePointer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CommanderServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PrimitivePointer': grpc.unary_unary_rpc_method_handler(
          servicer.PrimitivePointer,
          request_deserializer=labust__pb2.PointerPrimitiveService.FromString,
          response_serializer=commander__service__pb2.PrimitivePointerResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'service.Commander', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
